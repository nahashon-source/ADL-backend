{
  "info": {
    "name": "ADL Backend API - Complete",
    "description": "Complete API collection for ADL Backend with all tested and working endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "https://localhost",
      "type": "string"
    },
    {
      "key": "user_access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_refresh_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "admin_access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "admin_refresh_token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "1. System Endpoints",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            },
            "description": "Check API health status and database connectivity"
          }
        },
        {
          "name": "Root",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/",
              "host": ["{{base_url}}"],
              "path": [""]
            },
            "description": "Get API welcome message"
          }
        }
      ]
    },
    {
      "name": "2. User Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    console.log('✅ User registered successfully');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user1@example.com\",\n  \"username\": \"user1\",\n  \"password\": \"UserPass123!\",\n  \"full_name\": \"Test User\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/users/register",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "register"]
            },
            "description": "Register a new user account"
          }
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('user_access_token', jsonData.access_token);",
                  "    pm.collectionVariables.set('user_refresh_token', jsonData.refresh_token);",
                  "    console.log('✅ User logged in! Tokens saved automatically.');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"user1\",\n  \"password\": \"UserPass123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/users/login",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "login"]
            },
            "description": "Login and receive JWT access + refresh tokens (tokens auto-saved)"
          }
        },
        {
          "name": "Refresh User Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('user_access_token', jsonData.access_token);",
                  "    pm.collectionVariables.set('user_refresh_token', jsonData.refresh_token);",
                  "    console.log('✅ User tokens refreshed!');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{user_refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/users/refresh",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "refresh"]
            },
            "description": "Refresh access token using refresh token (auto-uses saved token)"
          }
        }
      ]
    },
    {
      "name": "3. User Profile (Protected)",
      "item": [
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/users/me",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "me"]
            },
            "description": "Get current user profile (auto-uses saved user token)"
          }
        },
        {
          "name": "Update User Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"full_name\": \"Updated Name\",\n  \"email\": \"newemail@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/users/me",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "me"]
            },
            "description": "Update current user profile"
          }
        },
        {
          "name": "Change Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"current_password\": \"UserPass123!\",\n  \"new_password\": \"NewUserPass456!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/users/change-password",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "change-password"]
            },
            "description": "Change user password (requires current password)"
          }
        }
      ]
    },
    {
      "name": "4. Admin Authentication",
      "item": [
        {
          "name": "Register Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    console.log('✅ Admin registered successfully');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin1@example.com\",\n  \"username\": \"admin1\",\n  \"password\": \"AdminPass123!\",\n  \"full_name\": \"Admin User\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/admins/register",
              "host": ["{{base_url}}"],
              "path": ["api", "admins", "register"]
            },
            "description": "Register a new admin account"
          }
        },
        {
          "name": "Login Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('admin_access_token', jsonData.access_token);",
                  "    pm.collectionVariables.set('admin_refresh_token', jsonData.refresh_token);",
                  "    console.log('✅ Admin logged in! Tokens saved automatically.');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"admin1\",\n  \"password\": \"AdminPass123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/admins/login",
              "host": ["{{base_url}}"],
              "path": ["api", "admins", "login"]
            },
            "description": "Login as admin and receive JWT tokens (tokens auto-saved)"
          }
        },
        {
          "name": "Refresh Admin Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('admin_access_token', jsonData.access_token);",
                  "    pm.collectionVariables.set('admin_refresh_token', jsonData.refresh_token);",
                  "    console.log('✅ Admin tokens refreshed!');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{admin_refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/admins/refresh",
              "host": ["{{base_url}}"],
              "path": ["api", "admins", "refresh"]
            },
            "description": "Refresh admin access token (auto-uses saved token)"
          }
        }
      ]
    },
    {
      "name": "5. Admin Operations (Protected)",
      "item": [
        {
          "name": "Get Current Admin",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/admins/me",
              "host": ["{{base_url}}"],
              "path": ["api", "admins", "me"]
            },
            "description": "Get current admin profile (auto-uses saved admin token)"
          }
        },
        {
          "name": "List All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/admins/users?page=1&page_size=10",
              "host": ["{{base_url}}"],
              "path": ["api", "admins", "users"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number (default: 1)"
                },
                {
                  "key": "page_size",
                  "value": "10",
                  "description": "Items per page (default: 10, max: 100)"
                },
                {
                  "key": "is_active",
                  "value": "true",
                  "disabled": true,
                  "description": "Filter by active status"
                }
              ]
            },
            "description": "List all users with pagination (admin only)"
          }
        }
      ]
    },
    {
      "name": "6. Password Reset",
      "item": [
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user1@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/password/forgot-password",
              "host": ["{{base_url}}"],
              "path": ["api", "password", "forgot-password"]
            },
            "description": "Request password reset email (requires SMTP configuration)"
          }
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"your_reset_token_from_email\",\n  \"new_password\": \"NewSecurePass123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/password/reset-password",
              "host": ["{{base_url}}"],
              "path": ["api", "password", "reset-password"]
            },
            "description": "Reset password using token from email"
          }
        },
        {
          "name": "Test Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"to_email\": \"your-email@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/password/test-email",
              "host": ["{{base_url}}"],
              "path": ["api", "password", "test-email"]
            },
            "description": "Send test email to verify SMTP configuration"
          }
        }
      ]
    }
  ]
}